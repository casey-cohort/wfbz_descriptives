---
title: "WFBZ Summaries"
toc: true
execute:
  echo: false
  warning: false
  message: false
---


```{r packages}
library(tidyverse)
library(sf)
library(patchwork)
library(gt)
library(glue)
library(showtext)
library(tidycensus)

options(scipen = 999)
set.seed(charToRaw('frolic')) # Webster's Word of the Day : October 22, 2025!
```

```{r theme}
# Set Font Arial
showtext_auto()
font_add("Arial", regular = "LiberationSans-Regular.ttf")
base_size = 14
theme_set(
  ggplot2::theme_minimal(
    base_family = 'Arial',
    base_size = base_size
  ) +
    ggplot2::theme(
      legend.background = element_blank(),
      legend.key = element_blank(),
      panel.background = element_blank(),
      panel.border = element_blank(),
      strip.background = element_blank(),
      plot.background = element_blank(),
      axis.line = element_blank(),
      panel.grid = element_blank(),
      plot.title = element_text(size = base_size + 14L),
      plot.subtitle = element_text(size = base_size + 8L)
    )
)
```

```{r data}
#| echo: false
#| message: false
#| cache: true
if (!file.exists('data/raw/wfbz_disasters_2000-2025.geojson')) {
  stop(
    "Manually download data set from https://dataverse.harvard.edu/dataset.xhtml?persistentId=doi:10.7910/DVN/DWILBW and unzip to data/raw."
  )
}

unzip_url <- function(url, dst) {
  download.file(
    url = url,
    destfile = t <- tempfile(fileext = ".zip")
  )
  unzip(t, overwrite = TRUE, exdir = dst)
  unlink(t, recursive = TRUE)
  dst
}

wfbz <- read_sf("data/raw/wfbz_disasters_2000-2025.geojson") %>%
  filter(!st_is_empty(geometry))
wfbz <- wfbz %>%
  filter(!str_detect(wildfire_complex_names, '(FLOOD$|FLOOD 2013$)')) # remove some colorado floods that snuck in

states_sf <- tigris::states(progress_bar = FALSE)

regions <- read_sf(unzip_url(
  "https://data.fs.usda.gov/geodata/edw/edw_resources/shp/S_USA.AdministrativeRegion.zip",
  dst = tempfile(fileext = ".shp")
)) %>%
  select(usfs_region = REGIONNAME) %>%
  mutate(usfs_region = str_replace(usfs_region, " Region", ""))

regions <- bind_rows(
  regions,
  st_filter(
    regions %>%
      filter(usfs_region == 'Pacific Southwest') %>%
      st_cast("POLYGON"),
    states_sf %>% filter(STUSPS == 'HI')
  ) %>%
    group_by(usfs_region) %>%
    summarize(geometry = st_combine(geometry)) %>%
    mutate(usfs_region = 'Hawaii'),
  st_filter(
    regions %>%
      filter(usfs_region == 'Pacific Southwest') %>%
      st_cast("POLYGON"),
    states_sf %>% filter(STUSPS == 'CA')
  ) %>%
    group_by(usfs_region) %>%
    summarize(geometry = st_combine(geometry)) %>%
    mutate(usfs_region = 'California')
) %>%
  filter(usfs_region != 'Pacific Southwest') %>%
  mutate(
    usfs_region = if_else(
      usfs_region == 'Northern',
      'Northern Rockies',
      usfs_region
    )
  ) %>%
  mutate(
    usfs_region = if_else(
      usfs_region == 'Rocky Mountain',
      'Southern Rockies',
      usfs_region
    )
  )

counties_pop <- get_decennial(
  geography = "county",
  variables = "P1_001N", # Total population variable in 2020 Census
  year = 2020,
  geometry = TRUE,
  output = "wide",
  progress_bar = FALSE
) %>%
  rename(population = P1_001N) %>%
  select(population, geometry)

regions$usfs_region_pop <- aggregate(
  st_centroid(counties_pop),
  regions,
  FUN = sum
)$population # centroid more or less ensures counties only end up in one region

```


```{r, cache = TRUE}
# Find Nearest Region
wfbz_region <- regions$usfs_region[st_nearest_feature(
  wfbz,
  regions,
  pairwise = TRUE
)]
wfbz_region_area <- as.numeric(
  st_area(regions)[st_nearest_feature(wfbz, regions, pairwise = TRUE)] /
    1000 /
    1000
)
wfbz_region_pop <- regions$usfs_region_pop[st_nearest_feature(
  wfbz,
  regions,
  pairwise = TRUE
)]


wfbz_crit <- wfbz %>%
  st_drop_geometry() %>%
  mutate(
    usfs_region = wfbz_region,
    usfs_region_area = wfbz_region_area,
    usfs_region_pop = wfbz_region_pop
  ) %>%
  filter(wildfire_community_intersect) %>%
  group_by(usfs_region, wildfire_year) %>%
  summarize(
    `Events` = n(),
    `Fatalities` = sum(wildfire_max_civil_fatalities, na.rm = TRUE),
    `Fatalities per 100K` = 100000 *
      sum(wildfire_max_civil_fatalities / usfs_region_pop, na.rm = TRUE),
    `Structures Destroyed` = sum(wildfire_struct_destroyed, na.rm = TRUE),
    `FEMA Declaration` = sum(wildfire_fema_dec, na.rm = TRUE),
    `Burned Area` = sum(wildfire_area, na.rm = TRUE),
    `Burned Area Percent` = 100 *
      sum(wildfire_area / usfs_region_area, na.rm = TRUE),
    `WUI-Intermix` = sum(str_detect(wildfire_wui, 'intermix'), na.rm = TRUE),
    `WUI-Interface` = sum(str_detect(wildfire_wui, 'interface'), na.rm = TRUE),
    `WUI-Intermix Percent` = 100 *
      sum(str_detect(wildfire_wui, 'intermix'), na.rm = TRUE) /
      n(),
    `WUI-Interface Percent` = 100 *
      sum(str_detect(wildfire_wui, 'interface'), na.rm = TRUE) /
      n(),
   `Mean Fire Size` = mean(wildfire_area, na.rm = TRUE),
    .groups = 'drop'
  )

wfbz_crit_all <- wfbz %>%
  st_drop_geometry() %>%
  mutate(
    usfs_region = wfbz_region,
    usfs_region_area = wfbz_region_area,
    usfs_region_pop = wfbz_region_pop
  ) %>%
  group_by(usfs_region, wildfire_year) %>%
  summarize(
    `Events` = n(),
    `Fatalities` = sum(wildfire_max_civil_fatalities, na.rm = TRUE),
    `Fatalities per 100K` = 100000 *
      sum(wildfire_max_civil_fatalities / usfs_region_pop, na.rm = TRUE),
    `Structures Destroyed` = sum(wildfire_struct_destroyed, na.rm = TRUE),
    `FEMA Declaration` = sum(wildfire_fema_dec, na.rm = TRUE),
    `Burned Area` = sum(wildfire_area, na.rm = TRUE),
    `Burned Area Percent` = 100 *
      sum(wildfire_area / usfs_region_area, na.rm = TRUE),
    `WUI-Intermix` = sum(str_detect(wildfire_wui, 'intermix'), na.rm = TRUE),
    `WUI-Interface` = sum(str_detect(wildfire_wui, 'interface'), na.rm = TRUE),
    `WUI-Intermix Percent` = 100 *
      sum(str_detect(wildfire_wui, 'intermix'), na.rm = TRUE) /
      n(),
    `WUI-Interface Percent` = 100 *
      sum(str_detect(wildfire_wui, 'interface'), na.rm = TRUE) /
      n(),
    `Mean Fire Size` = mean(wildfire_area, na.rm = TRUE),
    .groups = 'drop'
  )


```


```{r}
# Plot Main Figures Showing Variables over Time
plotme <- function(
  dat,
  var,
  rel = FALSE,
  unit = NA,
  stack = TRUE,
  line = FALSE
) {
  # Determine order to plot in
  region_summary <- dat %>%
    ungroup() %>%
    group_by(usfs_region) %>%
    summarize(tot = sum(get(var), na.rm = TRUE), .groups = 'drop') %>%
    mutate(pcttot = tot / sum(tot)) %>%
    arrange(desc(pcttot))

  region_order <- as.character(region_summary$usfs_region)

  # Add details to labels
  if (!stack) {
    region_label <- region_summary$usfs_region
  } else if (rel) {
    region_label <- paste0(
      as.character(region_summary$usfs_region),
      ' (',
      format(100 * region_summary$pcttot, digits = 1),
      '%)'
    )
  } else {
    region_label <- paste0(
      as.character(region_summary$usfs_region),
      ' (',
      str_replace(
        format(round(region_summary$tot), big.mark = ','),
        '\\s+',
        ''
      ),
      ')'
    )
  }

  # Assign colors to regions consistently
  region_colors <- c(khroma::color('light', reverse = FALSE)(9), '#ac87cc')
  region_colors[region_colors == '#dddddd'] <- '#757575' # lil darker

  attr(region_colors, "missing") <- NA
  names(region_colors) <- sort(region_label)

  dat$usfs_region <- factor(
    dat$usfs_region,
    levels = region_order,
    labels = region_label
  )


  # Summarize and Plot
  if (!stack) {
    dat %>%
      ggplot() +
      geom_col(
        aes(x = wildfire_year, y = get(var), fill = usfs_region),
        color = "grey25",
        size = .1,
        width = 1
      ) +
      scale_fill_manual(
        values = region_colors,
        guide = 'none'
      ) +
      facet_wrap(~usfs_region, ncol = 1, drop = TRUE, scales = 'free') +
      scale_x_continuous(
        expand = expansion(mult = c(0, 0)),
        limits = c(1999.5, 2024.5),
        breaks = seq(2000, 2024, by = 2),
        minor_breaks = 1999.5:2024.5
      ) +
      scale_y_continuous(
        expand = expansion(mult = c(0, 0)),
        limits = c(0, 100),
        labels = ~ paste0(.x, '%')
      ) +
      xlab("Year") +
      ylab(glue("{var}{if_else(is.na(unit), '', paste0(' (', unit, ')'))}")) +
      theme(
        panel.border = element_rect(color = "grey25", fill = NA, size = .25),
        plot.title = element_text(size = 14),
        axis.text.x = element_text(angle = 90, vjust = +.5),
        axis.ticks = element_line(),
        plot.margin = unit(c(0, 0, 0, 0), "pt"),
        panel.grid.minor.x = element_line(color = "grey25", size = .1),
        panel.background = element_rect(fill = "grey95")
      )
  } else if (rel) {
    dat %>%
      ggplot() +
      geom_col(
        aes(x = wildfire_year, y = get(var), fill = usfs_region),
        color = "grey25",
        size = .1,
        width = 1,
        position = position_fill()
      ) +
      scale_fill_manual(
        name = "Region (Overall Share)",
        values = region_colors
      ) +
      scale_x_continuous(
        expand = expansion(mult = c(0, 0)),
        limits = c(1999.5, 2024.5),
        breaks = seq(2000, 2024, by = 2)
      ) +
      scale_y_continuous(
        expand = expansion(mult = c(0, 0)),
        labels = scales::percent
      ) +
      xlab("Year") +
      ylab(glue("{var} (Share of Total)")) +
      theme(
        panel.border = element_rect(color = "grey25", fill = NA, size = .25),
        plot.title = element_text(size = 14),
        axis.text.x = element_text(angle = 90, vjust = +.5),
        axis.ticks = element_line(),
        plot.margin = unit(c(0, 0, 0, 0), "pt")
      )
  } else if (line) {
    dat %>%
      ggplot() +
      geom_line(
        aes(x = wildfire_year, y = get(var), color = usfs_region),
      ) +
      geom_point(
        aes(x = wildfire_year, y = get(var), color = usfs_region),
      ) +
      scale_color_manual(
        name = "Region (Overall Share)",
        values = region_colors
      ) +
      scale_x_continuous(
        expand = expansion(mult = c(0, 0)),
        limits = c(1999.5, 2024.5),
        breaks = seq(2000, 2024, by = 2)
      ) +
      scale_y_continuous(
        expand = expansion(mult = c(0, 0)),
        labels = scales::percent
      ) +
      xlab("Year") +
      ylab(glue("{var} (Share of Total)")) +
      theme(
        panel.border = element_rect(color = "grey25", fill = NA, size = .25),
        plot.title = element_text(size = 14),
        axis.text.x = element_text(angle = 90, vjust = +.5),
        axis.ticks = element_line(),
        plot.margin = unit(c(0, 0, 0, 0), "pt")
      )
  } else {
    dat %>%
      ggplot() +
      geom_col(
        aes(x = wildfire_year, y = get(var), fill = usfs_region),
        color = "grey25",
        size = .1,
        width = 1
      ) +
      scale_fill_manual(
        name = "Region (Overall Total)",
        values = region_colors
      ) +
      scale_x_continuous(
        expand = expansion(mult = c(0, 0)),
        limits = c(1999.5, 2024.5),
        breaks = seq(2000, 2024, by = 2)
      ) +
      scale_y_continuous(expand = expansion(mult = c(0, 0))) +
      xlab("Year") +
      ylab(glue("{var}{if_else(is.na(unit), '', paste0(' (', unit, ')'))}")) +
      theme(
        panel.border = element_rect(color = "grey25", fill = NA, size = .25),
        plot.title = element_text(size = 14),
        axis.text.x = element_text(angle = 90, vjust = +.5),
        axis.ticks = element_line(),
        plot.margin = unit(c(0, 0, 0, 0), "pt")
      )
  }
}
```

## Summary Statistics

```{r}
wfbz_by_region_agg <- wfbz %>%
  st_drop_geometry() %>%
  mutate(
    usfs_region = wfbz_region,
    usfs_region_area = wfbz_region_area,
    usfs_region_pop = wfbz_region_pop
  )
wfbz_by_region_agg <-
  bind_rows(
    `All Fires` = wfbz_by_region_agg,
    `Community-Impacting Fires` = filter(wfbz_by_region_agg, wildfire_community_intersect),
    .id = 'agg'
  )
wfbz_by_region_agg <-
  bind_rows(
    wfbz_by_region_agg,
    mutate(
      wfbz_by_region_agg,
      usfs_region = 'Nationwide',
      usfs_region_area = sum(as.numeric(st_area(regions)) / 1000 / 1000),
      usfs_region_pop = sum(regions$usfs_region_pop)
    )
  )

wfbz_by_region_agg %>%
  group_by(agg, usfs_region, usfs_region_area, usfs_region_pop) %>%
  summarize(
    `Count` = n(),
    `WUI Interface Fires` = sum(
      str_detect(wildfire_wui, 'interface'),
      na.rm = TRUE
    ),
    `WUI Intermix Fires` = sum(
      str_detect(wildfire_wui, 'intermix'),
      na.rm = TRUE
    ),
    `WUI Any Fires` = sum(
      str_detect(wildfire_wui, 'interface') &
        str_detect(wildfire_wui, 'intermix'),
      na.rm = TRUE
    ),
    `Missing WUI` = 0,
    `Missing Ignition Date` = sum(is.na(wildfire_ignition_date)),
    `Missing Containment Date` = sum(is.na(wildfire_containment_date_max)),
    `Missing Civilian Fatalities` = sum(is.na(wildfire_civil_fatalities)),
    `Missing Evacuations` = sum(is.na(wildfire_civil_evacuation)),
    `Missing Structures Destroyed` = sum(is.na(wildfire_struct_destroyed)),
    `Fatalities per 100K` = 100000 *
      sum(wildfire_max_civil_fatalities, na.rm = TRUE) / first(usfs_region_pop),
    `Mean Fire Size (km^2)` = mean(wildfire_area, na.rm = TRUE),
    #`Burned Area Percent` = 100 *
     # sum(wildfire_area, na.rm = TRUE) / first(usfs_region_area),
    N = n(),
    .groups = 'drop'
  ) %>%
  select(-usfs_region_area, -usfs_region_pop) %>%
  pivot_longer(c(-agg, -usfs_region, -N)) %>%
  mutate(
    value = case_when(
      name == 'Fatalities per 100K' ~ glue('{format(value, digits = 2)}'),
      name == 'Mean Fire Size (km^2)' ~ glue('{format(value, digits = 2)}'),
      TRUE ~ glue('{round(value)} ({format(round(100 * value / N, 2), nsmall = 2)}%)')
    )
  ) %>%
  select(-N) %>%
  pivot_wider(names_from = c(usfs_region), values_from = c(value)) %>%
  select(order(colnames(.))) %>%
  relocate(Nationwide) %>%
  relocate(name) %>%
  rename(` ` = name) %>%
  gt(groupname_col = 'agg') %>%
  tab_options(table.width = px(1800))

```

## Variables over Time

### Number of Fire Disasters per Region over Time

```{r, fig.height = 8, fig.width = 12}
plotme(wfbz_crit, 'Events', rel = FALSE) +
  ggtitle('Community-Impacting\nDisasters') +
  plotme(wfbz_crit_all, 'Events', rel = FALSE) +
  ggtitle('All Disasters') +
  plot_spacer() +
  plot_spacer() +
  plotme(wfbz_crit, 'Events', rel = TRUE) +
  plotme(wfbz_crit_all, 'Events', rel = TRUE) +
  plot_layout(ncol = 2, heights = c(5, 1, 5))
```


### Number of Fatalities per Region over Time

The five deadliest fires in our data set are labeled.


```{r, fig.height = 8, fig.width = 12}
(plotme(wfbz_crit, 'Fatalities', rel = FALSE) +
  annotate(
    "text",
    x = 2023,
    y = 50,
    size = 2,
    angle = -45,
    hjust = 'right',
    label = "Lahaina Fire (HI) ———"
  ) +
  annotate(
    "text",
    x = 2018,
    y = 80,
    size = 2,
    angle = -45,
    hjust = 'right',
    label = "Camp Fire (CA) ———"
  ) +
  annotate(
    "text",
    x = 2017,
    y = 50,
    size = 2,
    angle = -45,
    hjust = 'right',
    label = "Tubbs Fire (CA) ———"
  ) +
  annotate(
    "text",
    x = 2013,
    y = 19,
    size = 2,
    angle = -45,
    hjust = 'right',
    label = "Yarnell Hill Fire (AZ) ———"
  ) +
  annotate(
    "text",
    x = 2020,
    y = 20,
    size = 2,
    angle = -45,
    hjust = 'right',
    label = "North Complex Fire (CA) ———"
  ) +
  ggtitle('Community-Impacting\nDisasters')) +
  (plotme(wfbz_crit_all, 'Fatalities', rel = FALSE) +
    ggtitle('All Disasters') +
    annotate(
      "text",
      x = 2023,
      y = 50,
      size = 2,
      angle = -45,
      hjust = 'right',
      label = "Lahaina Fire (HI) ———"
    ) +
    annotate(
      "text",
      x = 2018,
      y = 80,
      size = 2,
      angle = -45,
      hjust = 'right',
      label = "Camp Fire (CA) ———"
    ) +
    annotate(
      "text",
      x = 2017,
      y = 50,
      size = 2,
      angle = -45,
      hjust = 'right',
      label = "Tubbs Fire (CA) ———"
    ) +
    annotate(
      "text",
      x = 2013,
      y = 19,
      size = 2,
      angle = -45,
      hjust = 'right',
      label = "Yarnell Hill Fire (AZ) ———"
    ) +
    annotate(
      "text",
      x = 2020,
      y = 20,
      size = 2,
      angle = -45,
      hjust = 'right',
      label = "North Complex Fire (CA) ———"
    )) +
  plot_spacer() +
  plot_spacer() +
  plotme(wfbz_crit, 'Fatalities', rel = TRUE) +
  plotme(wfbz_crit_all, 'Fatalities', rel = TRUE) +
  plot_layout(ncol = 2, heights = c(5, 1, 5))
```


### Number of Structures Destroyed per Region over Time

The five fires in our data set with the most destroyed structures are labeled.

```{r, fig.height = 8, fig.width = 12}
(plotme(wfbz_crit, 'Structures Destroyed', rel = FALSE) +
  annotate(
    "text",
    x = 2018,
    y = 150 * 100,
    size = 2,
    angle = -45,
    hjust = 'right',
    label = "Camp Fire (CA) ———"
  ) +
  annotate(
    "text",
    x = 2017,
    y = 85 * 100,
    size = 2,
    angle = -45,
    hjust = 'right',
    label = "Tubbs Fire (CA) ———"
  ) +
  annotate(
    "text",
    x = 2023,
    y = 35 * 100,
    size = 2,
    angle = -45,
    hjust = 'right',
    label = "Lahaina Fire (HI) ———"
  ) +
  annotate(
    "text",
    x = 2015,
    y = 45 * 100,
    size = 2,
    angle = -45,
    hjust = 'right',
    label = "Valley Fire (CA) ———"
  ) +
  annotate(
    "text",
    x = 2018,
    y = 140 * 100,
    size = 2,
    angle = -45,
    hjust = 'right',
    label = "Woolsey (CA) ———"
  ) +
  ggtitle('Community-Impacting\nDisasters')) +
  (plotme(wfbz_crit_all, 'Structures Destroyed', rel = FALSE) +
    ggtitle('All Disasters') +
    annotate(
      "text",
      x = 2018,
      y = 150 * 100,
      size = 2,
      angle = -45,
      hjust = 'right',
      label = "Camp Fire (CA) ———"
    ) +
    annotate(
      "text",
      x = 2017,
      y = 85 * 100,
      size = 2,
      angle = -45,
      hjust = 'right',
      label = "Tubbs Fire (CA) ———"
    ) +
    annotate(
      "text",
      x = 2023,
      y = 35 * 100,
      size = 2,
      angle = -45,
      hjust = 'right',
      label = "Lahaina Fire (HI) ———"
    ) +
    annotate(
      "text",
      x = 2015,
      y = 45 * 100,
      size = 2,
      angle = -45,
      hjust = 'right',
      label = "Valley Fire (CA) ———"
    ) +
    annotate(
      "text",
      x = 2018,
      y = 140 * 100,
      size = 2,
      angle = -45,
      hjust = 'right',
      label = "Woolsey (CA) ———"
    )) +
  plot_spacer() +
  plot_spacer() +
  plotme(wfbz_crit, 'Structures Destroyed', rel = TRUE) +
  plotme(wfbz_crit_all, 'Structures Destroyed', rel = TRUE) +
  plot_layout(ncol = 2, heights = c(5, 1, 5))
```


### Number of FEMA Declarations per Region over Time

```{r, fig.height = 8, fig.width = 12}
plotme(wfbz_crit, 'FEMA Declaration', rel = FALSE) +
  ggtitle('Community-Impacting\nDisasters') +
  plotme(wfbz_crit_all, 'FEMA Declaration', rel = FALSE) +
  ggtitle('All Disasters') +
  plot_spacer() +
  plot_spacer() +
  plotme(wfbz_crit, 'FEMA Declaration', rel = TRUE) +
  plotme(wfbz_crit_all, 'FEMA Declaration', rel = TRUE) +
  plot_layout(ncol = 2, heights = c(5, 1, 5))
```

### Burned Area over Time

```{r, fig.height = 8, fig.width = 12}
(plotme(wfbz_crit, 'Burned Area', rel = FALSE, unit = 'sq. km') +
  scale_y_continuous(
    expand = expansion(mult = c(0, 0)),
    labels = scales::scientific
  ) +
  ggtitle('Community-Impacting\nDisasters')) +
  (plotme(wfbz_crit_all, 'Burned Area', rel = FALSE, unit = 'sq. km') +
    #scale_y_continuous(expand = expansion(mult = c(0, 0)), labels = scales::scientific) +
    ggtitle('All Disasters')) +
  plot_spacer() +
  plot_spacer() +
  plotme(wfbz_crit, 'Burned Area', rel = TRUE) +
  plotme(wfbz_crit_all, 'Burned Area', rel = TRUE) +
  plot_layout(ncol = 2, heights = c(5, 1, 5))
```

### Average Fire Size over Time

```{r, fig.height = 4, fig.width = 12}
(plotme(wfbz_crit, 'Mean Fire Size', rel = FALSE, unit = 'sq. km') +
  scale_y_continuous(
    expand = expansion(mult = c(0, 0)),
    labels = scales::scientific
  ) +
  ggtitle('Community-Impacting\nDisasters')) +
  (plotme(wfbz_crit_all, 'Mean Fire Size', rel = FALSE, unit = 'sq. km') +
    #scale_y_continuous(expand = expansion(mult = c(0, 0)), labels = scales::scientific) +
    ggtitle('All Disasters')) +
  plot_layout(ncol = 2)
```


## Share of WUI Fires over Time

### Share of Fires in Wildland-Urban Interface over Time

```{r, fig.height = 16, fig.width = 12}
plot_spacer() +
  (plotme(wfbz_crit, 'WUI-Interface Percent', stack = FALSE) +
    ggtitle('Community-Impacting\nDisasters')) +
  plot_spacer() +
  plot_layout(ncol = 3)
```

### Share of Fires in Wildland-Urban Intermix over Time

```{r, fig.height = 16, fig.width = 12}
plot_spacer() +
  (plotme(wfbz_crit, 'WUI-Intermix Percent', stack = FALSE) +
    ggtitle('Community-Impacting\nDisasters')) +
  plot_spacer() +
  plot_layout(ncol = 3)
```

## Correlations

```{r}
library('ggh4x')
wfbz_lab <- wfbz %>%
  st_drop_geometry() %>%
  filter(wildfire_community_intersect) %>%
  transmute(
    wildfire_id,
    `Area (sq. km)` = wildfire_area,
    `Fatalities` = wildfire_max_civil_fatalities,
    `Structures Destroyed` = wildfire_struct_destroyed,
    `WUI` = if_else(
      is.na(wildfire_wui),
      'None',
      str_replace(wildfire_wui, '\\|', ' & ')
    ),
    `FEMA Declaration` = as.character(wildfire_fema_dec),
    `Population Density (unitless)` = wildfire_max_pop_den
  )
```

### Numeric Values Compared

```{r, fig.height = 12, fig.width = 12}
xwfbz_num <- wfbz_lab %>%
  select(where(is.numeric)) %>%
  pivot_longer(-wildfire_id)
xwfbz_num <- inner_join(
  xwfbz_num,
  xwfbz_num,
  by = 'wildfire_id',
  relationship = 'many-to-many'
)
ggplot(xwfbz_num) +
  geom_jitter(
    aes(x = value.x, y = value.y),
    alpha = .1,
    width = 5 / 247,
    height = 5 / 247
  ) +
  facet_grid2(name.x ~ name.y, scales = 'free', independent = 'all') +
  scale_x_continuous(
    trans = 'log',
    labels = ~ format(.x, digits = 3, scientific = 0)
  ) +
  scale_y_continuous(
    trans = 'log',
    labels = ~ format(.x, digits = 3, scientific = 0)
  ) +
  theme(
    panel.border = element_rect(color = "grey25", fill = NA, size = .25),
    plot.title = element_text(size = 14),
    axis.text.x = element_text(angle = 90, vjust = +.5),
    axis.ticks = element_line(),
    plot.margin = unit(c(0, 0, 0, 0), "pt"),
  ) +
  xlab('') +
  ylab('') +
  ggtitle("Numeric Variables Compared (log-scale)")
```

### Numeric & Categorical Values Compared


```{r, fig.height = 8, fig.width = 12}
xwfbz_numcat <- wfbz_lab %>%
  pivot_longer(
    cols = c(where(is.numeric), -wildfire_id),
    names_to = 'name_num',
    values_to = 'val_num'
  ) %>%
  pivot_longer(
    cols = c(WUI, `FEMA Declaration`),
    names_to = 'name_cat',
    values_to = 'val_cat'
  ) %>%
	mutate(val_cat = factor(val_cat, levels = c("None", "FALSE", "TRUE", "interface & intermix", "intermix",
"interface")))

p1 <- ggplot(xwfbz_numcat %>% filter(name_cat == 'WUI')) +
  geom_boxplot(aes(
    x = val_cat,
    y = val_num,
    fill = val_cat
  )) +
  facet_grid2(name_cat ~ name_num, scales = 'free', independent = 'all') +
  scale_y_continuous(
    trans = 'log',
    labels = ~ format(.x, digits = 3, scientific = 0)
  ) +
	khroma::scale_fill_bright(guide = 'none') +
  theme(
    panel.border = element_rect(color = "grey25", fill = NA, size = .25),
    plot.title = element_text(size = 14),
    axis.text.x = element_text(angle = 90, vjust = +.5, hjust = 1),
    axis.ticks = element_line(),
    plot.margin = unit(c(0, 0, 0, 0), "pt"),
  ) +
  xlab('') +
  ylab('')

p2 <- ggplot(xwfbz_numcat %>% filter(name_cat == 'FEMA Declaration')) +
  geom_boxplot(aes(
    x = val_cat,
    y = val_num,
    fill = val_cat
  )) +
  facet_grid2(name_cat ~ name_num, scales = 'free', independent = 'all') +
  scale_y_continuous(
    trans = 'log',
    labels = ~ format(.x, digits = 3, scientific = 0)
  ) +
	khroma::scale_fill_bright(guide = 'none', reverse = TRUE) +
  theme(
    panel.border = element_rect(color = "grey25", fill = NA, size = .25),
    plot.title = element_text(size = 14),
    axis.text.x = element_text(angle = 90, vjust = +.5, hjust = 1),
    axis.ticks = element_line(),
    plot.margin = unit(c(0, 0, 0, 0), "pt"),
  ) +
  xlab('') +
  ylab('')

p1 + p2 + plot_layout(ncol = 1) + patchwork::plot_annotation(title = "Numeric & Categorical Variables Compared (log-scale)")
```


### Categorical Values Compared

```{r, fig.height = 4, fig.width = 4}

wfbz_lab %>%
  group_by(WUI = str_to_title(WUI), `FEMA Declaration`, .drop = FALSE) %>%
  summarize(
    n = n(),
    lab = paste0(format(n, big.mark = ','), ' (', format(100*n()/nrow(wfbz_lab), digits = 2), '%)')
  ) %>%
	ggplot() +
	geom_tile(aes(x = WUI, y = `FEMA Declaration`, fill = n)) +
	geom_text(aes(x = WUI, y = `FEMA Declaration`, label = lab, color = n)) +
	khroma::scale_fill_lapaz(name = '# Wildfire\nDisasters') +
	khroma::scale_color_lapaz(reverse = TRUE, guide = 'none') +
	theme(
  	plot.title = element_text(size = 14),
  	axis.text.x = element_text(angle = 90, vjust = +.5, hjust = 1),
  	axis.ticks = element_line(),
  	plot.margin = unit(c(0,0,0,0), "pt")
	)

```

## Fire Season Timing

```{r, fig.height = 18, fig.width = 6}

# Determine order to plot in
region_summary <- wfbz %>%
  st_drop_geometry() %>%
 	mutate(usfs_region = wfbz_region) %>%
  ungroup() %>%
  filter(wildfire_year < 2003) %>%
  group_by(usfs_region) %>%
  summarize(medstart = yday(median(wildfire_ignition_date_max, na.rm = TRUE)), .groups = 'drop') %>%
  arrange(medstart)

region_order <- as.character(region_summary$usfs_region)
region_label <- region_summary$usfs_region

# Assign colors to regions consistently
region_colors <- c(khroma::color('light', reverse = FALSE)(9), '#ac87cc')
region_colors[region_colors == '#dddddd'] <- '#757575' # lil darker

attr(region_colors, "missing") <- NA
names(region_colors) <- region_label

wfbz %>%
  mutate(usfs_region = wfbz_region) %>%
	mutate(
    usfs_region = factor(
      wfbz_region,
      levels = region_order,
      labels = region_label
    )
  ) %>%
	st_drop_geometry() %>%
	filter(wildfire_community_intersect) %>%
	filter(between(wildfire_year, 2000, 2024)) %>%
	mutate(wildfire_states = str_split(wildfire_states, '\\|')) %>%
	unnest(wildfire_states) %>% # pull out multiple rows from fires that cross state lines
	transmute(
		usfs_region,
		wildfire_state = wildfire_states,
		wildfire_year,
		wildfire_containment_date,
		wildfire_ignition_date_max,
		wildfire_fema_dec_date
	) %>%
	ggplot() +
    # Two boxplots are layered to get a custom look -- whiskers belong to the bottom plot
		geom_boxplot(
			aes(x =  as.Date('2099-01-01') + yday(wildfire_ignition_date_max), group = wildfire_year, y = wildfire_year, fill = usfs_region),
			orientation = 'y',
      lwd = .1,
      color = 'black',
			outliers = FALSE
		) +
    # Top Boxplot
		geom_boxplot(
			aes(x =  as.Date('2099-01-01') + yday(wildfire_ignition_date_max), group = wildfire_year, y = wildfire_year, fill = usfs_region, color = usfs_region),
      outlier.shape = NA, coef = 0, # hide all but the box body on top layer
			orientation = 'y',
			outliers = FALSE
		) +
    geom_point( # replace hidden median bar with a dot
      aes(x = as.Date('2099-01-01') + yday(wildfire_ignition_date_max), y = wildfire_year),
      stat = 'summary',
      fun = 'median',
      orientation = 'y',
      size = .25
    ) +
		geom_smooth(
			aes(x = as.Date('2099-01-01') + yday(wildfire_ignition_date_max), y = wildfire_year),
			orientation = 'y',
			method = 'lm',
			linetype = 'longdash',
			color = 'grey15',
			fill = 'grey90',
      linewidth = .5,
      se = FALSE
		) +
		facet_wrap(~usfs_region, ncol = 1, scales = 'free_x') +
		scale_fill_manual(
	  	values = region_colors,
	  	guide = 'none'
	  ) +
    scale_color_manual(
	  	values = region_colors,
	  	guide = 'none'
	  ) +
	  #scale_x_continuous(expand = expansion(mult = c(0, 0)), limits = c(0, 366)) +
	  scale_x_date(date_breaks = "1 month", date_labels = "%b", limits = as.Date(c('2099-01-01', '2099-12-31')), expand = c(0,0)) +
	  scale_y_continuous(transform = 'reverse') +
	  ylab("Year") +
	  xlab("") + #xlab("Month of Year") +
		ggtitle("Ignition Dates of Disaster Fires by Year") +
	  theme(
	  	panel.border = element_rect(color = "grey25", fill = NA, size = .25),
	  	plot.title = element_text(size = 14),
			axis.text.x = element_text(angle = 90, vjust = +.5),
	  	axis.ticks = element_line()
		)
```
## Reference

### Regions Mapped

```{r, fig.height = 6, fig.width = 8}
regions_cart <- regions %>%
  st_cast('POLYGON') %>%
  tigris::shift_geometry()

region_colors <- c(khroma::color('light', reverse = FALSE)(9), '#ac87cc')
attr(region_colors, "missing") <- NA
names(region_colors) <- sort(unique(regions$usfs_region))

ggplot(regions_cart) +
  geom_sf(aes(fill = usfs_region), color = "grey25", size = .05) +
  geom_sf(
    data = tigris::shift_geometry(tigris::states(
      cb = TRUE,
      progress_bar = FALSE
    )),
    color = 'black',
    fill = NA,
    size = .1
  ) +
  scale_fill_manual(
    name = "Region",
    values = region_colors
  ) +
  scale_x_continuous(limits = c(-3115585, 2263736)) +
  scale_y_continuous(limits = c(-1702303, 1559103)) +
  theme(
    axis.text = element_blank()
  )
```
